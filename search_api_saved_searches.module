<?php

/**
 * @file
 * Allows visitors to bookmark searches and get notifications for new results.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\search_api\IndexInterface;
use Drupal\search_api_saved_searches\Entity\SavedSearch;
use Drupal\search_api_saved_searches\Plugin\search_api_saved_searches\notification\Email;

/**
 * Implements hook_cron().
 */
function search_api_saved_searches_cron() {
  \Drupal::getContainer()
    ->get('search_api_saved_searches.new_results_check')
    ->checkAll();
}

/**
 * Implements hook_entity_field_storage_info().
 */
function search_api_saved_searches_entity_field_storage_info(EntityTypeInterface $entity_type) {
  if ($entity_type->id() !== 'search_api_saved_search') {
    return [];
  }

  // Add field storage definitions for all notification plugin-provided fields.
  $fields = [];

  $bundles = \Drupal::getContainer()
    ->get('entity_type.bundle.info')
    ->getBundleInfo('search_api_saved_search');
  foreach (array_keys($bundles) as $bundle) {
    // We don't use the $base_field_definitions parameter in that method, so no
    // need to retrieve those for passing them here.
    $fields += SavedSearch::bundleFieldDefinitions($entity_type, $bundle, []);
  }

  return $fields;
}

/**
 * Implements hook_ENTITY_TYPE_delete() for type "search_api_index".
 */
function search_api_saved_searches_search_api_index_delete(IndexInterface $index) {
  // Delete all saved searches that used this index.
  $ids = \Drupal::entityQuery('search_api_saved_search')
    ->condition('index_id', $index->id())
    ->execute();
  if ($ids) {
    try {
      $storage = \Drupal::entityTypeManager()
        ->getStorage('search_api_saved_search');
      $searches = $storage->loadMultiple($ids);
      if ($searches) {
        $storage->delete($searches);
      }
    }
    // @todo Use multi-catch for InvalidPluginDefinitionException and
    //   EntityStorageException once we depend on PHP 7.1+.
    catch (\Exception $e) {
      $args['%index'] = $index->label();
      $args['@index_id'] = $index->id();
      watchdog_exception('search_api_saved_searches', $e, '%type while trying to delete saved searches on deleted index %index (@index_id): @message in %function (line %line of %file).', $args);
    }
  }
}

/**
 * Implements hook_mail().
 *
 * Implemented on behalf of the "E-mail" notification plugin.
 *
 * @see \Drupal\search_api_saved_searches\Plugin\search_api_saved_searches\notification\Email
 */
function search_api_saved_searches_mail($key, &$message, $params) {
  if (empty($params['plugin'])) {
    return;
  }
  $plugin = $params['plugin'];
  if (!($plugin instanceof Email)) {
    return;
  }

  switch ($key) {
    case Email::MAIL_NEW_RESULTS:
      $plugin->getNewResultsMail($message, $params);
      break;
  }
}
